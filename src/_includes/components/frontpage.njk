{%- for item in collections.featured -%}

{% include "components/primary-card.njk" %}

{%-endfor-%}

{%- for post in collections.latestPosts -%}

{% include "components/card-buffer.njk" %}

{%- endfor -%}


<script>
    const paddings = [
        {
            wide:[70,754] //top, left
        },
        {
            wide:[543,553]
        },
        {
            wide:[500,79]
        }
    ]
    const buffers = document.getElementsByClassName("post-buffer");
    let i=0;
    for (const buffer of buffers) {
        buffer.style.top = paddings[i].wide[0]+"px";
        buffer.style.left = paddings[i].wide[1]+"px";
        i++;
    }
    // add event listener to listen for window resizes
    /*
    const buffers = document.getElementsByClassName("post-buffer");
    function elementsOverlap(el1, el2) {
        const domRect1 = el1.getBoundingClientRect();
        const domRect2 = el2.getBoundingClientRect();
        return !(
            domRect1.top > domRect2.bottom ||
            domRect1.right < domRect2.left ||
            domRect1.bottom < domRect2.top ||
            domRect1.left > domRect2.right
        );
    }
    function touchesOthers(el1) {
        for (const buffer of buffers) {
            if (buffer == el1) continue;
            if (elementsOverlap(el1, buffer)) {
                return true};
        }
        return false;
    }
    Array.from(buffers).forEach(buffer => {
        do {
        //left alignment
        const leftDist = Math.round((Math.random()*700)+24) + "px";
        buffer.style.left = leftDist;
        //top alignment
        const topDist = Math.round((Math.random()*500)+100) + "px";
        buffer.style.top = topDist;
        } while (touchesOthers(buffer));
    })
    */
</script>